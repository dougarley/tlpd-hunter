// Generated by CoffeeScript 1.8.0
(function() {
  var AddButton, Card;

  AddButton = (function() {
    function AddButton(button) {
      this.addButton = Ti.UI.createView({
        height: button.size,
        width: button.size,
        borderRadius: '30dp',
        backgroundGradient: {
          type: 'linear',
          startPoint: {
            x: '0%',
            y: '0%'
          },
          endPoint: {
            x: '0%',
            y: '100%'
          },
          colors: [
            {
              color: '#c00',
              offset: 0.0
            }, {
              color: '#b00',
              offset: 1.0
            }
          ]
        }
      });
      this.border = Ti.UI.createView({
        bottom: button.bottom,
        right: button.right,
        height: '64dp',
        width: '64dp',
        borderRadius: '32dp',
        backgroundGradient: {
          type: 'linear',
          startPoint: {
            x: '0%',
            y: '0%'
          },
          endPoint: {
            x: '0%',
            y: '100%'
          },
          colors: [
            {
              color: '#F33',
              offset: 0.0
            }, {
              color: '#c00',
              offset: 0.5
            }
          ]
        }
      });
      this.icon = Ti.UI.createImageView({
        image: 'images/plus.png',
        height: '44dp',
        width: '44dp'
      });
      this.create = function() {
        this.addButton.add(this.icon);
        this.border.add(this.addButton);
        return this.border;
      };
    }

    return AddButton;

  })();

  Card = (function() {
    function Card(card) {
      Ti.API.debug('Creating Card');
      this.elements = [];
      Ti.API.debug('Creating main card container');
      this.main = Ti.UI.createView({
        top: 0,
        left: 0,
        width: '100%',
        height: Ti.UI.SIZE,
        layout: 'vertical'
      });
      Ti.API.debug('Checking for arguments');
      if (card) {
        this.padding = card.padding || 0;
        this.main.top = card.top || void 0;
        this.main.left = card.left || void 0;
        this.main.right = card.right || void 0;
        this.main.bottom = card.bottom || void 0;
      }
      Ti.API.debug('Creating card wrapper');
      this.wrapper = Ti.UI.createView({
        backgroundColor: '#fafafa',
        width: '100%',
        height: Ti.UI.SIZE
      });
      Ti.API.debug('Creating content area');
      this.content = Ti.UI.createView({
        width: '100%',
        height: Ti.UI.SIZE,
        top: this.padding,
        bottom: this.padding,
        layout: 'vertical'
      });
      Ti.API.debug('Creating dropshadow');
      this.dropshadow = Ti.UI.createView({
        width: '100%',
        height: '3dp',
        opacity: 0.26,
        backgroundGradient: {
          type: 'linear',
          startPoint: {
            x: '0%',
            y: '0%'
          },
          endPoint: {
            x: '0%',
            y: '100%'
          },
          colors: [
            {
              color: '#000',
              offset: 0.0
            }, {
              color: '#eee',
              offset: 0.5
            }
          ]
        }
      });
      this.add = function(element) {
        Ti.API.debug('Adding element ' + JSON.stringify(element));
        return this.elements.push(element);
      };
      this.create = function() {
        var element, _i, _len, _ref;
        Ti.API.debug('Rendering card');
        _ref = this.elements;
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          element = _ref[_i];
          this.content.add(element);
        }
        this.wrapper.add(this.content);
        this.main.add(this.wrapper);
        this.main.add(this.dropshadow);
        return this.main;
      };
    }

    return Card;

  })();

  exports.Card = Card;

  exports.AddButton = AddButton;

}).call(this);
