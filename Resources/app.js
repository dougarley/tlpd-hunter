// Generated by CoffeeScript 1.8.0
(function() {
  var Card, RoundButton, addButton, character_data, charactersTable, charactersTableCard, charactersTableHeader, detailsWindow, generateView, mainContent, mainScroll, mainWindow, recentDataTemp, recentKillCard, recentKillHeader;

  Titanium.UI.setBackgroundColor('#EEE');

  RoundButton = require('addButtonClass').AddButton;

  Card = require('cardClass').Card;

  mainWindow = Ti.UI.createWindow({
    title: 'Characters',
    navTintColor: '#FFEA00',
    backgroundColor: '#EEE'
  });

  mainScroll = Ti.UI.createScrollView({
    width: Ti.UI.SIZE,
    height: Ti.UI.FILL,
    contentHeight: 'auto'
  });

  mainContent = Ti.UI.createView({
    width: Ti.UI.SIZE,
    left: 0,
    top: 0,
    layout: 'vertical'
  });

  mainWindow.addEventListener("open", function() {
    var actionBar;
    if (!mainWindow.activity) {
      Ti.API.error("Can't access action bar on a lightweight window.");
    } else {
      actionBar = mainWindow.activity.actionBar;
    }
    if (actionBar) {
      return actionBar.logo = 'images/plus.png';
    }
  });

  addButton = new RoundButton({
    right: '26dp',
    bottom: '26dp',
    size: '60dp'
  });

  recentKillHeader = Ti.UI.createLabel({
    text: 'Recent Activity',
    font: {
      fontSize: '16sp',
      fontWeight: 'bold'
    },
    color: '#9E9E9E',
    top: '7sp',
    left: '20dp'
  });

  recentKillCard = new Card({
    top: '10dp',
    left: 0,
    padding: '20dp'
  });

  recentDataTemp = Ti.UI.createLabel({
    text: 'Vyragosa has not been looted recently.',
    font: {
      fontSize: '16sp'
    },
    left: '20dp',
    top: 0,
    color: '#000'
  });

  recentKillCard.add(recentDataTemp);

  charactersTableHeader = Ti.UI.createLabel({
    text: 'Characters',
    font: {
      fontSize: '16sp',
      fontWeight: 'bold'
    },
    color: '#9E9E9E',
    top: '7sp',
    left: '20dp'
  });

  charactersTable = Ti.UI.createTableView();

  charactersTableCard = new Card({
    top: '10dp',
    left: 0
  });

  charactersTableCard.add(charactersTable);

  mainContent.add(recentKillHeader);

  mainContent.add(recentKillCard.create());

  mainContent.add(charactersTableHeader);

  mainContent.add(charactersTableCard.create());

  mainWindow.add(mainContent);

  mainWindow.add(addButton.create());

  generateView = require('mainViewController').generateView;

  character_data = require('tempdata').characters;

  detailsWindow = require('detailsWindowView').detailsWindow;

  charactersTable.addEventListener('click', function(e) {
    return detailsWindow(e.source.details);
  });

  generateView(character_data, charactersTable);

  mainWindow.open();

}).call(this);
